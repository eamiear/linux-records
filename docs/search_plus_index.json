{"./":{"url":"./","title":"Introduction","keywords":"","body":"linux-records linux records Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-16 10:57:40 "},"文件系统目录.html":{"url":"文件系统目录.html","title":"文件系统目录","keywords":"","body":"Linux 文件系统目录 目录 用途 / 虚拟目录的根目录。通常不会在这里存储文件 /bin 二进制目录，存放许多用户级的GNU工具 /boot 启动目录，存放启动文件 /dev 设备目录，Linux在这里创建设备节点 /etc 系统配置文件目录 /home 主目录，Linux在这里创建用户目录 /lib 库目录，存放系统和应用程序的库文件 /media 媒体目录，可移动媒体设备的常用挂载点 /mnt 挂载目录，另一个可移动媒体设备的常用挂载点 /opt 可选目录，常用于存放第三方软件包和数据文件 /proc 进程目录，存放现有硬件及当前进程的相关信息 /root root用户的主目录 /sbin 系统二进制目录，存放许多GNU管理员级工具 /run 运行目录，存放系统运作时的运行时数据 /srv 服务目录，存放本地服务的相关文件 /sys 系统目录，存放系统硬件信息的相关文件 /tmp 临时目录，可以在该目录中创建和删除临时工作文件 /usr 用户二进制目录，大量用户级的GNU工具和数据文件都存储在这里 /var 可变目录，用以存放经常变化的文件，比如日志文件 -rw-r--r--. 1 root root 0 May 10 12:21 1 lrwxrwxrwx. 1 root root 7 May 10 12:14 bin dr-xr-xr-x. 4 root root 4096 May 10 12:35 boot drwxr-xr-x. 20 root root 3300 May 10 12:33 dev drwxr-xr-x. 134 root root 8192 May 14 15:15 etc drwxr-xr-x. 7 root root 68 May 14 15:14 home lrwxrwxrwx. 1 root root 7 May 10 12:14 lib lrwxrwxrwx. 1 root root 9 May 10 12:14 lib64 drwxr-xr-x. 2 root root 6 Nov 5 2016 media drwxr-xr-x. 2 root root 6 Nov 5 2016 mnt drwxr-xr-x. 4 root root 30 May 10 14:02 opt dr-xr-xr-x. 211 root root 0 May 10 12:33 proc dr-xr-x---. 6 root root 233 May 10 14:14 root drwxr-xr-x. 38 root root 1160 May 10 14:07 run lrwxrwxrwx. 1 root root 8 May 10 12:14 sbin drwxr-xr-x. 2 root root 6 Nov 5 2016 srv dr-xr-xr-x. 13 root root 0 May 10 12:33 sys drwxrwxrwt. 17 root root 4096 May 15 03:45 tmp drwxr-xr-x. 13 root root 155 May 10 12:14 usr drwxr-xr-x. 20 root root 282 May 10 12:33 var Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-16 11:03:10 "},"浏览文件系统.html":{"url":"浏览文件系统.html","title":"浏览文件系统","keywords":"","body":"浏览文件系统 切换目录 - cd cd destination destination: 可以为绝对路径或相对路径 # 绝对路径 [root@server-test-211 ~]# cd /home/kz/test [root@server-test-211 test]# # 相对路径，（..）当前目录的父目录 [root@server-test-211 test]# cd ../user [root@server-test-211 user]# # 相对路径， (.) 当前目录 [root@server-test-211 kz]# cd ./user 查看文件/目录路径 - pwd [root@server-test-211 user]# pwd /home/kz/user Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-16 11:13:51 "},"文件和目录列表.html":{"url":"文件和目录列表.html","title":"文件和目录列表","keywords":"","body":"文件和目录列表 - ls 选项 用途 附加说明 示例 安按字母排序输出列表 -F 区分文件和目录 -a 输出隐藏文件 -R 递归输出子目录的文件 -l 列表格式输出及其详细信息 ? 过滤输出列表，表示一个字符 文件拓展匹配 * 过滤输出列表，表示零个或多个字符 文件拓展匹配 [] 过滤输出列表，匹配方括号中字符 元字符统配符 [axo]、[a-z] [!] 过滤输出列表，排除在外的内容 元字符统配符 [!a] [root@server-test-211 /]# ls 1 bin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var [root@server-test-211 /]# ls -F 1 boot/ etc/ lib@ media/ opt/ root/ sbin@ sys/ usr/ bin@ dev/ home/ lib64@ mnt/ proc/ run/ srv/ tmp/ var/ [root@server-test-211 /]# ls -a . 1 boot etc lib media opt .readahead run srv tmp var .. bin dev home lib64 mnt proc root sbin sys usr [root@server-test-211 kz]# ls -F -R .: test/ test.md ./test: index.md [root@server-test-211 kz]# ls -l total 4 drwxr-xr-x. 2 root root 22 May 15 15:53 test -rw-r--r--. 1 root root 13 May 15 15:52 test.md [root@server-test-211 kz]# ls -l t?st.md -rw-r--r--. 1 root root 13 May 15 15:52 test.md [root@server-test-211 kz]# ls -l t*.md -rw-r--r--. 1 root root 13 May 15 15:52 test.md [root@server-test-211 kz]# ls -l te[xi]t.md -rw-r--r--. 1 root root 13 May 15 16:07 text.md [root@server-test-211 kz]# ls -l te[xs]t.md -rw-r--r--. 1 root root 13 May 15 15:52 test.md -rw-r--r--. 1 root root 13 May 15 16:07 text.md [root@server-test-211 kz]# ls -l te[a-z]t.md -rw-r--r--. 1 root root 13 May 15 15:52 test.md -rw-r--r--. 1 root root 13 May 15 16:07 text.md [root@server-test-211 kz]# ls -l te[!x]t.md -rw-r--r--. 1 root root 13 May 15 15:52 test.md Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-16 11:05:12 "},"文件操作管理.html":{"url":"文件操作管理.html","title":"文件操作管理","keywords":"","body":"文件管理 创建文件 - touch [root@server-test-211 kz]# touch admin.html [root@server-test-211 kz]# ls -l total 12 -rw-r--r--. 1 root root 0 May 15 16:13 admin.html -rw-r--r--. 1 root root 13 May 15 16:06 index.html drwxr-xr-x. 2 root root 22 May 15 15:53 test -rw-r--r--. 1 root root 13 May 15 15:52 test.md -rw-r--r--. 1 root root 13 May 15 16:07 text.md 复制文件 - cp cp source destination 将 source 复制到 destination，如果destination为文件名路径，则为覆盖操作 [root@server-test-211 kz]# ls admin.html index.html test test.md text.md [root@server-test-211 kz]# cp index.html test/ [root@server-test-211 test]# ls index.html index.md # 复制并重新命名 [root@server-test-211 kz]# cp admin.html test/admin.md [root@server-test-211 test]# ls admin.md index.html index.md # 覆盖 [root@server-test-211 kz]# cp index.html test/admin.md cp: overwrite ‘test/admin.md’? y # 复制所有test目录下所有文件到 user 目录 [root@server-test-211 kz]# cp test/* user/ [root@server-test-211 kz]# cd user [root@server-test-211 user]# ls admin.md index.html index.md 文件重命名或移动 - mv [root@server-test-211 kz]# mv text.md test.html 重命名并移动 [root@server-test-211 kz]# mv test.md ./user/user.md [root@server-test-211 user]# ls admin.md index.html index.md user.md 删除文件 - rm 选项 用途 -i 提示是否要删除文件 -f 强制删除文件 [root@server-test-211 user]# rm user.md rm: remove regular file ‘user.md’? y [root@server-test-211 user]# rm -f index.md Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-16 15:00:50 "},"目录管理.html":{"url":"目录管理.html","title":"目录管理","keywords":"","body":"目录管理 创建目录 - mkdir [root@server-test-211 kz]# mkdir user [root@server-test-211 kz]# ls admin.html index.html test test.html user 删除目录 - rmdir | rm rmdir 只能删除空目录 # 删除空目录 [root@server-test-211 kz]# rmdir user [root@server-test-211 kz]# # 删除非空目录 [root@server-test-211 kz]# rmdir test rmdir: failed to remove ‘test’: Directory not empty [root@server-test-211 kz]# rm 删除目录文件 选项 用途 -r/-R 递归删除 -f 强制删除 [root@server-test-211 kz]# rm -rf user [root@server-test-211 kz]# ls admin.html index.html test test.html Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-16 11:17:31 "},"文件内容查询.html":{"url":"文件内容查询.html","title":"文件内容查询","keywords":"","body":"查看文件内容 查看文件类型 - file # 目录 [root@server-test-211 kz]# file test test: directory # 文本 [root@server-test-211 kz]# file test.html test.html: ASCII text 查看整个文件内容 - cat 选项 用途 -n 添加行号 -b 只给有文本的行添加行号 [root@server-test-211 kz]# cat test.html a text file [root@server-test-211 kz]# cat -n test.html 1 a text file 2 3 hello world 4 5 hello linux ` [root@server-test-211 kz]# cat -n -b test.html 1 a text file 2 hello world 3 hello linux 查看部分文件 查看文件尾部内容 - tail 选项 用途 -n 添加行号 number 显示最后number行记录 # 查看尾部 部分内容 [root@server-test-211 kz]# tail test.html # 查看最后12行内容 [root@server-test-211 kz]# tail -n 12 test.html 查看文件头部内容 - head 选项 用途 -number 显示头部number行记录 [root@server-test-211 kz]# head test.html #查看头部前三行内容 [root@server-test-211 kz]# head -3 test.html a text file hello world Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-16 15:01:06 "},"数据文件处理.html":{"url":"数据文件处理.html","title":"数据文件处理","keywords":"","body":"数据文件处理 数据排序 - sort 选项 用途 按照指定默认语言的排序规则进行排序，将数字识别为字符 -b --ignore-leading-blanks 排序时忽略起始的空白 -C --check=quiet 不排序，如果数据无序也不要报告 -c --check 不排序，但检查输入数据是不是已排序；未排序的话，报告 -d --dictionary-order 仅考虑空白和字母，不考虑特殊字符 -f --ignore-case 默认情况下，会将大写字母排在前面；这个参数会忽略大小写 -g --general-number-sort 按通用数值来排序（跟-n不同，把值当浮点数来排序，支持科学计数法表示的值） -i --ignore-nonprinting 在排序时忽略不可打印字符 -k --key=POS1[,POS2] 排序从POS1位置开始；如果指定了POS2的话，到POS2位置结束 -M --month-sort 用三字符月份名按月份排序 -m --merge 将两个已排序数据文件合并 -n --numeric-sort 按字符串数值来排序（并不转换为浮点数） -o --output=file 将排序结果写出到指定的文件中 -R --random-sort 按随机生成的散列表的键值排序 -R--random-source=FILE 指定-R参数用到的随机字节的源文件 -r --reverse 反序排序（升序变成降序） -S --buffer-size=SIZE 指定使用的内存大小 -s --stable 禁用最后重排序比较 -T --temporary-directory=DIR 指定一个位置来存储临时工作文件 -t --field-separator=SEP 指定一个用来区分键位置的字符 -u --unique 和-c参数一起使用时，检查严格排序；不和-c参数一起用时,仅输出第一例相似的两行 -z --zero-terminated 用NULL字符作为行尾，而不是用换行符 [root@server-test-211 kz]# vi index.html a index file 9 11 2 30 8 cat five four one [root@server-test-211 kz]# sort index.html 11 2 30 8 9 a index file cat five four one [root@server-test-211 kz]# sort -n index.html a index file cat five four one 2 8 9 11 数据搜索 - grep grep [options] pattern [file] options: 选项配置 pattern: 字符匹配规则 file: 目标文件 选项 用途 默认使用正则表达式匹配模式 -v 反向搜索，输出不匹配该模式的行 -n 显示匹配模式的行所在的行号 -c 含有匹配模式的行的数量 -e 指定多个匹配模式 [root@server-test-211 kz]# grep f index.html a index file five four # 正则表达式 [root@server-test-211 kz]# grep [fc] index.html a index file cat five four # 反向查询 [root@server-test-211 kz]# grep -v [fc0-9] index.html one # 显示行号 [root@server-test-211 kz]# grep -vn [fc0-9] index.html 2: 8: 10: 12: 14: 15:one # 匹配总数 [root@server-test-211 kz]# grep -vnc [fc0-9] index.html 6 # 多个匹配规则 [root@server-test-211 kz]# grep -e d -e e index.html a index file five one 数据压缩 - gzip 压缩单个文件 [root@server-test-211 kz]# gzip test.html [root@server-test-211 kz]# ll total 8 -rw-r--r--. 1 root root 0 May 15 16:13 admin.html -rw-r--r--. 1 root root 48 May 16 11:47 index.html drwxr-xr-x. 2 root root 65 May 16 13:58 test -rw-r--r--. 1 root root 1054 May 15 17:37 test.html.gz 文件解压 - gunzip 解压单个文件 [root@server-test-211 kz]# gunzip test.html.gz 数据归档 - tar tar function [option] object1 object2 ... function | 选项 | 用途 | |:-------|:-----| |-A --concatenate |将一个已有tar归档文件追加到另一个已有tar归档文件| |-c --create |创建一个新的tar归档文件| |-d --diff| 检查归档文件和文件系统的不同之处| |-d --delete |从已有tar归档文件中删除| |-r --append |追加文件到已有tar归档文件末尾| |-t --list |列出已有tar归档文件的内容| |-u --update |将比tar归档文件中已有的同名文件| |-x --extract |从已有tar归档文件中提取文件| option | 选项 | 用途 | |:-------|:-----| |-C dir |切换到指定目录| |-f file |输出结果到文件或设备file| |-j |将输出重定向给bzip2命令来压缩内容| |-p |保留所有文件权限| |-v |在处理文件时显示文件| |-z |将输出重定向给gzip命令来压缩内容| # 归档test.html index.html文件到test.rar [root@server-test-211 kz]# tar -cvf test.rar test.html index.html test.html index.html [root@server-test-211 kz]# ls -l total 20 -rw-r--r--. 1 root root 0 May 15 16:13 admin.html -rw-r--r--. 1 root root 48 May 16 11:47 index.html drwxr-xr-x. 2 root root 56 May 16 14:00 test -rw-r--r--. 1 root root 2212 May 15 17:37 test.html -rw-r--r--. 1 root root 10240 May 16 14:10 test.rar # 归档目录文件到test.rar [root@server-test-211 kz]# tar -cvf test.rar test/* test/admin.md test/index.html test/index.md # 查看归档文件test.rar中的内容 [root@server-test-211 kz]# tar -tf test.rar test/admin.md test/index.html test/index.md # 提取 test-archive.rar 文件 [root@server-test-211 kz]# tar -xvf test-archive.rar test.html Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-16 14:17:45 "},"磁盘管理.html":{"url":"磁盘管理.html","title":"磁盘管理","keywords":"","body":"磁盘管理 查看磁盘空间状态 - df 选项 用途 显示磁盘使用状态 -h 以易于阅读的方式显示 [root@server-test-211 kz]# df Filesystem 1K-blocks Used Available Use% Mounted on /dev/mapper/cl-root 294984984 7079236 287905748 3% / devtmpfs 3933336 0 3933336 0% /dev tmpfs 3949516 124 3949392 1% /dev/shm tmpfs 3949516 17768 3931748 1% /run tmpfs 3949516 0 3949516 0% /sys/fs/cgroup /dev/sda1 1038336 177812 860524 18% /boot tmpfs 789904 16 789888 1% /run/user/42 tmpfs 789904 0 789904 0% /run/user/0 [root@server-test-211 kz]# df -h Filesystem Size Used Avail Use% Mounted on /dev/mapper/cl-root 282G 6.8G 275G 3% / devtmpfs 3.8G 0 3.8G 0% /dev tmpfs 3.8G 124K 3.8G 1% /dev/shm tmpfs 3.8G 18M 3.8G 1% /run tmpfs 3.8G 0 3.8G 0% /sys/fs/cgroup /dev/sda1 1014M 174M 841M 18% /boot tmpfs 772M 16K 772M 1% /run/user/42 tmpfs 772M 0 772M 0% /run/user/0 查看特定目录磁盘使用情况 - du 选项 用途 显示当前目录磁盘使用状态 -h 以用户易读的格式显示 -c 显示当前目录所有文件的总大小 -s 显示每个输出参数的总计 [root@server-test-211 kz]# du 12 ./test 20 . [root@server-test-211 kz]# du -c 12 ./test 20 . 20 total [root@server-test-211 kz]# du -h 12K ./test 20K . Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-16 11:27:24 "},"进程管理.html":{"url":"进程管理.html","title":"进程管理","keywords":"","body":"进程管理 查看进程 - ps 选项 用途 默认查看当前控制台下当前用户的进程 -A 显示所有进程 -N 显示与指定参数不符的所有进程 -a 显示除控制进程和无终端进程外的所有进程 -d 显示除控制进程外的所有进程 -e 显示所有进程 -C cmdlist 显示包含在cmdlist列表中的进程 -G grplist 显示组ID在grplist列表中的进程 -U userlist 显示属主的用户ID在userlist列表中的进程 -g grplist 显示会话或组ID在grplist列表中的进程 -p pidlist 显示PID在pidlist列表中的进程 -s sesslist 显示会话ID在sesslist列表中的进程 -t ttylist 显示终端ID在ttylist列表中的进程 -u userlist 显示有效用户ID在userlist列表中的进程 -F 显示更多额外输出（相对-f参数而言） -O format 显示默认的输出列以及format列表指定的特定列 -M 显示进程的安全信息 -c 显示进程的额外调度器信息 -f 显示完整格式的输出 -j 显示任务信息 -l 显示长列表 -o format 仅显示由format指定的列 -y 不要显示进程标记（process flag，表明进程状态的标记） -Z 显示安全标签（security context）①信息 -H 用层级格式来显示进程（树状，用来显示父进程） -n namelist 定义了WCHAN列显示的值 -w 采用宽输出模式，不限宽度显示 -L 显示进程中的线程 -V 显示ps命令的版本号 [root@server-test-211 kz]# ps -ef UID PID PPID C STIME TTY TIME CMD root 1 0 0 May10 ? 00:00:14 /usr/lib/systemd/systemd --system --deserialize 17 结束进程 结束指定PID进程 - kill [root@server-test-211 kz]# kill [PID] 结束所有进程 - killall [root@server-test-211 kz]# killall # 结束所有匹配的进程 [root@server-test-211 kz]# killall http* Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-16 11:09:20 "},"环境变量.html":{"url":"环境变量.html","title":"环境变量","keywords":"","body":"环境变量 系统默认环境变量 全局变量 shell 会话及其所有子 shell 都可以使用全局变量 查看全局变量 - env | printenv [root@server-test-211 kz]# env XDG_SESSION_ID=2205 HOSTNAME=server-test-211 SELINUX_ROLE_REQUESTED= TERM=xterm SHELL=/bin/bash HISTSIZE=1000 ... [root@server-test-211 kz]# printenv XDG_SESSION_ID=2205 HOSTNAME=server-test-211 SELINUX_ROLE_REQUESTED= TERM=xterm SHELL=/bin/bash ... 查看某个环境变量 - printenv | echo printenv [变量] | echo $[变量] [root@server-test-211 kz]# printenv SHELL /bin/bash [root@server-test-211 kz]# echo $SHELL /bin/bash 局部变量 局部变量只能在当前 shell 会话（当前进程）中使用 查看局部变量 - set set 显示进程中的所有环境变量-全局变量、局部变量 [root@server-test-211 kz]# set 设置局部变量|用户定义变量 系统环境变量默认大写，自定义变量使用小写格式定义变量 [root@server-test-211 kz]# iuse='Hello' [root@server-test-211 kz]# echo $iuse Hello [root@server-test-211 kz]# iuse=Hello-World [root@server-test-211 kz]# echo $iuse Hello-World # 没有引号且包含空格时，会当成被 命令 [root@server-test-211 kz]# iuse=Hello World bash: World: command not found... 设置全局变量 全局变量通过 export 局部变量到全局环境中。导出到全局环境的变量，不受局部变量修改的影响 [root@server-test-211 kz]# iuse='Hello World' [root@server-test-211 kz]# export iuse # 查看是否已写入全局环境 [root@server-test-211 kz]# printenv XDG_SESSION_ID=2205 HOSTNAME=server-test-211 .... HOME=/root iuse=Hello World 删除变量 - unset [root@server-test-211 kz]# unset iuse [root@server-test-211 kz]# echo $iuse 设置PATH环境变量 定位系统变量 Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-23 10:23:27 "},"使用变量.html":{"url":"使用变量.html","title":"使用变量","keywords":"","body":"使用变量 变量分为环境（系统）变量、用户变量，变量通过美元符号 $ 进行引用，使用变量时如果没有使用 $，变量将当做一个字符串 环境变量 [root@server-test-211 kz]# vi test.sh #!/bin/bash # display user information. echo This is a test echo \"userid: $USER\" echo UID: $UID echo HOME: $HOME # 执行 [root@server-test-211 kz]# ./test.sh This is a test userid: root UID: 0 HOME: /root 用户变量 [root@server-test-211 kz]# vi test.sh #!/bin/bash # display user information. iuse='Linux' days=30 user='Kat' echo \"$user used $iuse in $days days ago\" user='Ketty' echo \"$user doesn't use $iuse\" # 执行 [root@server-test-211 kz]# ./test.sh Kat used Linux in 30 days ago Ketty doesn't use Linux 命令替换 将命令赋值自定义变量 反引号字符( ` ) [root@server-test-211 kz]# vi test.sh #!/bin/bash # display user information. iDate=`date` echo \"The date and time are: \" $iDate # 执行 [root@server-test-211 kz]# ./test.sh The date and time are: Thu May 23 10:37:17 CST 2019 $() [root@server-test-211 kz]# vi test.sh #!/bin/bash # display user information. iDate=$(date) echo \"The date and time are: \" $iDate # 执行 [root@server-test-211 kz]# ./test.sh The date and time are: Thu May 23 10:37:17 CST 2019 Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-23 10:38:14 "},"用户管理.html":{"url":"用户管理.html","title":"用户管理","keywords":"","body":"用户管理 查看系统用户 系统用户信息存放在 /ect/shadow 和 /etc/passwd 中 [root@server-test-211 kz]# cat /etc/passwd root:x:0:0:root:/root:/bin/bash kz:x:1005:1005::/home/kz:/bin/bash ... [root@server-test-211 kz]# cat /etc/shadow root:$6$RnO4aI6fLfGPQt... kz:$6$OPcj3AW... ... 新增用户 - useradd 查看新增用户系统默认配置 - -D [root@server-test-211 home]# useradd -D GROUP=100 HOME=/home INACTIVE=-1 EXPIRE= SHELL=/bin/bash SKEL=/etc/skel CREATE_MAIL_SPOOL=yes 配置 描述 GROUP=100 新用户会被添加到GID为100的公共组 HOME=/home 新用户的HOME目录将会位于/home/loginname INACTIVE=-1 新用户账户密码在过期后不会被禁用 EXPIRE= 新用户账户未设置过期日期 SHELL=/bin/bash 新用户账户将bash shell作为默认shell SKEL=/etc/skel 系统会将/etc/skel目录下的内容复制到用户的HOME目录下 CREATE_MAIL_SPOOL=yes 系统会该用户账户在mail目录下创建一个用于接受邮件的文件 新增用户 选项 用途 默认不会创建HOME目录 -m 创建HOME目录 -c comment 给新用户添加备注 -d home_dir 为主目录指定一个名字（如果不想用登录名作为主目录名的话） -e expire_date 用YYYY-MM-DD格式指定一个账户过期的日期 -f inactive_days 指定这个账户密码过期后多少天这个账户被禁用，0表示密码已过期就禁用，1表示禁用这个功能 -g initial_group 指定用户登录组的GID或组名 -G group ... 指定用户除登录组之外所属的一个或多个附加组 -k 必须和-m一起使用，将/etc/skel目录的内容复制到用户的HOME目录 -M 不创建用户的HOME目录（当默认设置里要求创建时才使用这个选项） -n 创建一个与用户登录名同名的新组 -r 创建系统账户 -p passwd 为用户账户指定默认密码 -s shell 指定默认的登录shell -u uid 为账户指定唯一的UID [root@server-test-211 home]# useradd -m das -c dasheng [root@server-test-211 home]# ll total 4 drwx------. 3 das das 78 May 22 10:30 das drwxr-x---. 14 do rd 4096 May 10 16:05 do [root@server-test-211 das]# ls -al total 12 drwx------. 3 das das 78 May 22 10:30 . drwxr-xr-x. 9 root root 89 May 22 10:30 .. -rw-r--r--. 1 das das 18 Aug 3 2016 .bash_logout -rw-r--r--. 1 das das 193 Aug 3 2016 .bash_profile -rw-r--r--. 1 das das 231 Aug 3 2016 .bashrc drwxr-xr-x. 4 das das 39 May 10 12:14 .mozilla 修改用户 修改用户账户 - usermod 包含useradd的指令，同时具备以下选项 |选项|用途| |---|---| |-l|修改用户账户的登录名| |-L|锁定账户，使用户无法登录| |-p|修改账户的密码| |-U|解除锁定，使用户可以登录| [root@server-test-211 home]# usermod -L das 修改用户密码 - passwd [root@server-test-211 home]# passwd das Changing password for user das. New password: BAD PASSWORD: The password fails the dictionary check - it is based on a dictionary word Retype new password: passwd: all authentication tokens updated successfully. 查询登录名密码对并修改密码 - chpasswd 可批量修改账户密码，输入内容格式: userid:passwd # 新建users.txt文件 [root@server-test-211 home]# touch users.txt # 添加用户账户密码对 [root@server-test-211 home]# vi users.txt das:12345678 # 使用chpasswd批量修改 [root@server-test-211 home]# chpasswd 修改密码过期日期 - chage 选项 用途 -d 设置上次修改密码到现在的天数 -E 设置密码过期的日期 -r 设置密码过期到锁定账户的天数 -m 设置修改密码之间最少要多少天 -w 设置密码过期前多久开始出现提醒信息 [root@server-test-211 home]# chage -E '2019-06-07' das 修改用户账户备注信息 - chfn [root@server-test-211 home]# chfn das Changing finger information for das. Name [dasheng]: dasheng Office []: ob Office Phone []: 111 Home Phone []: 111 Finger information changed. [root@server-test-211 home]# grep das /etc/passwd das:x:1005:1005:dasheng,ob,111,111:/home/das:/bin/bash 修改用户账户默认登录shell - chsh [root@server-test-211 home]# chsh -s /bin/csh das 删除用户 - userdel 选项 用途 默认只删除/etc/passwd文件中的用户信息，不会删除系统中输入该账户的任务文件 -r 删除用户的HOME目录以及邮件目录 [root@server-test-211 das]# userdel -r das [root@server-test-211 home]# ll total 4 drwxr-x---. 14 do rd 4096 May 10 16:05 do Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-22 15:21:28 "},"文件权限详情.html":{"url":"文件权限详情.html","title":"文件权限详情","keywords":"","body":"文件权限 权限符号 [root@server-test-211 kz]# ls -l total 116 -rw-r--r--. 1 root root 0 May 15 16:13 admin.html -rw-r--r--. 1 root root 48 May 16 11:47 index.html -rw-r--r--. 1 root root 104658 May 20 09:54 installed_software.txt -rwxr--r--. 1 root root 33 May 22 11:28 shell.sh drwxr-xr-x. 2 root root 56 May 16 14:00 test -rw-r--r--. 1 root root 2212 May 15 17:37 test.html drwxr-xr-x. 2 root root 23 May 17 09:30 user 符号 描述 - 代表文件 d 代表目录 1 代表链接 c 代表字符型设备 b 代表块设备 n 代表网络设备 r 代表对象是可读的 w 代表对象是可写的 x 达标对象是可执行的 rwx 为权限字符： 每三个字符为一组，每个字符为一种访问权限，每一组代表安全级别，没有某种权限，该权限位以-替代 d rwx r-x r-x 2 root root 文件类型 文件属主的权限 属组成员的权限 其他用户的权限 文件属主登录名 属组登录名 修改权限 chmod options mode file 八进制模式 [root@server-test-211 kz]# chmod 760 shell.sh 参考表格，对应三组权限如下： |7|6|0| |---|--|--| |rwx|rw-|---| |属主权限|属组成员权限|其他用户权限| 三字符模式 [ugoa..][+-=]{rwxXstugo..] 如： u+x 权限作用对象 [ugoa] u 代表用户 g 代表组 o 代表其他 a 代表以上所有 权限操作 + 在权限对象现有权限基础上增加权限 - 在权限对象现有权限基础上移除权限 = 将权限对象现有权限设置为=后的权限 权限类型 r 读 w 写 x 执行 X 如果对象是目录或者他已有执行权限，赋予执行权限 s 运行时重新设置UID或GID t 保留文件或目录 u 将权限设置为跟属主一样 g 将权限设置为跟属组一样 o 将权限设置为跟其他用户一样 # 对 shell.sh 文件在用户权限基础上添加 x-执行权限 [root@server-test-211 kz]# chmod u+x shell.sh 修改所属关系 修改文件的属主 - chown chown options owner[.group] file # 属主为 root [root@server-test-211 kz]# ll total 116 -rw-r--r--. 1 root root 0 May 15 16:13 admin.html -rw-r--r--. 1 root root 48 May 16 11:47 index.html -rw-r--r--. 1 root root 104658 May 20 09:54 installed_software.txt -rwxr--r--. 1 root root 33 May 22 11:28 shell.sh drwxr-xr-x. 2 root root 56 May 16 14:00 test -rw-r--r--. 1 root root 2212 May 15 17:37 test.html drwxr-xr-x. 2 root root 23 May 17 09:30 user # 修改shell.sh属主为kz [root@server-test-211 kz]# chown kz shell.sh [root@server-test-211 kz]# ll total 116 -rw-r--r--. 1 root root 0 May 15 16:13 admin.html -rw-r--r--. 1 root root 48 May 16 11:47 index.html -rw-r--r--. 1 root root 104658 May 20 09:54 installed_software.txt -rwxr--r--. 1 kz root 33 May 22 11:28 shell.sh drwxr-xr-x. 2 root root 56 May 16 14:00 test -rw-r--r--. 1 root root 2212 May 15 17:37 test.html drwxr-xr-x. 2 root root 23 May 17 09:30 user # 修改shell.sh属组为shared [root@server-test-211 kz]# chown .shared shell.sh [root@server-test-211 kz]# ll total 116 -rw-r--r--. 1 root root 0 May 15 16:13 admin.html -rw-r--r--. 1 root root 48 May 16 11:47 index.html -rw-r--r--. 1 root root 104658 May 20 09:54 installed_software.txt -rwxr--r--. 1 root shared 33 May 22 11:28 shell.sh drwxr-xr-x. 2 root root 56 May 16 14:00 test -rw-r--r--. 1 root root 2212 May 15 17:37 test.html drwxr-xr-x. 2 root root 23 May 17 09:30 user # 修改shell.sh属主、属组为kz、shared [root@server-test-211 kz]# chown kz.shared shell.sh [root@server-test-211 kz]# ll total 116 -rw-r--r--. 1 root root 0 May 15 16:13 admin.html -rw-r--r--. 1 root root 48 May 16 11:47 index.html -rw-r--r--. 1 root root 104658 May 20 09:54 installed_software.txt -rwxr--r--. 1 kz shared 33 May 22 11:28 shell.sh drwxr-xr-x. 2 root root 56 May 16 14:00 test -rw-r--r--. 1 root root 2212 May 15 17:37 test.html drwxr-xr-x. 2 root root 23 May 17 09:30 user 修改文件的属组 - chgrp 用户账户必须是这个文件或目录的属主，同时是新属组的成员 [root@server-test-211 kz]# chgrp shared user Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-22 14:35:30 "},"包管理工具.html":{"url":"包管理工具.html","title":"包管理工具","keywords":"","body":"包管理工具 - yum 查看 yum 版本 [root@server-test-211 kz]# yum --version 3.4.3 列出已安装包 已安装包列表输出到控制台 [root@server-test-211 kz]# yum list installed 已安装包列表输出到文件 [root@server-test-211 kz]# yum list installed > installed_software.txt [root@server-test-211 kz]# ls -l total 112 -rw-r--r--. 1 root root 0 May 15 16:13 admin.html -rw-r--r--. 1 root root 48 May 16 11:47 index.html -rw-r--r--. 1 root root 104658 May 20 09:54 installed_software.txt 查看已安装某软件包的详情信息 [root@server-test-211 kz]# yum list git Loaded plugins: fastestmirror, langpacks Loading mirror speeds from cached hostfile * base: mirrors.cn99.com * extras: mirrors.aliyun.com * updates: mirrors.163.com Available Packages git.x86_64 安装软件 在线安装 yum install package_name [root@server-test-211 kz]# yum install jenkins 本地安装 yum localinstall package_name.rpm 下载 rpm 安装文件到本机 [root@server-test-211 kz]# yum localinstall git-2.8.4-1.ep7.x86_64.rpm 更新软件 查看已安装可更新的软件 [root@server-test-211 kz]# yum list updates 更新指定的已安装包 yum update package_name [root@server-test-211 kz]# yum update git 更新全部已安装可更新的软件包 [root@server-test-211 kz]# yum update 卸载软件 删除软件包并保留配置、数据文件 yum remove package_name [root@server-test-211 kz]# yum remove git 删除软件及其所有文件 yum erase package_name [root@server-test-211 kz]# yum erase git 处理损坏的包依赖关系 安装多个软件包时，软件包的依赖关系相互覆盖 查看包依赖关系 yum deplist package_name [root@server-test-211 kz]# yum deplist git Loaded plugins: fastestmirror, langpacks Loading mirror speeds from cached hostfile * base: mirrors.cn99.com * extras: mirrors.aliyun.com * updates: mirrors.163.com package: git.x86_64 1.8.3.1-20.el7 dependency: /bin/bash 清理损坏依赖 [root@server-test-211 kz]# yum clean all Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-20 10:12:46 "},"编辑器.html":{"url":"编辑器.html","title":"编辑器","keywords":"","body":"编辑器 Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-16 15:06:54 "},"shell命令.html":{"url":"shell命令.html","title":"shell命令","keywords":"","body":"shell 命令 外部命令 - which | type 非 bash shell 自带程序，通常位于/bin、/usr/bin、/sbin或/usr/sbin中的安装程序，可通过 which 或 type命令找到，which只能查询外部命令 [root@server-test-211 kz]# type ps ps is /usr/bin/ps [root@server-test-211 kz]# which ps /usr/bin/ps 内建命令 - type bash shell 自带命令程序，通过type进行查找，（存在多种实现的命令，即外部命令及内建命令并存） 选项 用途 内建命令 -a 内建命令，外部命令 [root@server-test-211 kz]# type exit exit is a shell builtin [root@server-test-211 kz]# which exit /usr/bin/which: no exit in (/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin) [root@server-test-211 kz]# type -a cd cd is a shell builtin cd is /usr/bin/cd [root@server-test-211 kz]# which echo /usr/bin/echo 历史命令使用记录 - history 查询 shell 命令使用记录 [root@server-test-211 kz]# history 1 csh 2 exit 3 cd /home 命令别名 - alias 查看现有可用别名 - alias -p [root@server-test-211 kz]# alias -p alias cp='cp -i' alias egrep='egrep --color=auto' alias fgrep='fgrep --color=auto' alias grep='grep --color=auto' alias l.='ls -d .* --color=auto' alias li='ls -li' alias ll='ls -l --color=auto' alias ls='ls --color=auto' alias mv='mv -i' alias rm='rm -i' alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde' 自定义别名 - alias [别名]='[命令]' [root@server-test-211 kz]# alias li='ls -li' [root@server-test-211 kz]# li total 20 269629433 -rw-r--r--. 1 root root 0 May 15 16:13 admin.html 269629435 -rw-r--r--. 1 root root 48 May 16 11:47 index.html 537281613 drwxr-xr-x. 2 root root 56 May 16 14:00 test 269629429 -rw-r--r--. 1 root root 10240 May 16 14:16 test-archive.rar 269629434 -rw-r--r--. 1 root root 2212 May 15 17:37 test.html Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-16 14:43:29 "},"创建简单shell脚本.html":{"url":"创建简单shell脚本.html","title":"创建简单shell脚本","keywords":"","body":"创建简单 shell 脚本 创建 test.sh 文件 [root@server-test-211 kz]# touch test.sh [root@server-test-211 kz]# vi test.sh 文件指定脚本执行的 shell 执行 bash shell执行脚本 [root@server-test-211 kz]# vi test.sh #!/bin/bash 写入脚本内容 这里输出一个简单字符串 [root@server-test-211 kz]# vi test.sh #!/bin/bash echo This is a test 执行脚本 [root@server-test-211 kz]# ./test.sh This is a test 报无权限问题处理 [root@server-test-211 kz]# ./test.sh -bash: ./test.sh: Permission denied 赋予权限 [root@server-test-211 kz]# chmod u+x test.sh Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-22 15:03:42 "},"输入输出重定向.html":{"url":"输入输出重定向.html","title":"输入输出重定向","keywords":"","body":"输入输出重定向 将命令的输出重定向到另一个位置（文件），将文件作为命令的输入 输出重定向 覆盖文件原内容 command > outputfile # 将日期输出到文件 [root@server-test-211 kz]# date > test.sh [root@server-test-211 kz]# cat test.sh Thu May 23 10:43:06 CST 2019 #查看docker安装路径，并输出到文件 [root@server-test-211 kz]# whereis docker > test.sh [root@server-test-211 kz]# cat test.sh docker: /usr/bin/docker /etc/docker /usr/libexec/docker /usr/share/man/man1/docker.1.gz 不覆盖文件原内容-追加 command >> outputfile [root@server-test-211 kz]# date >> test.sh [root@server-test-211 kz]# cat test.sh docker: /usr/bin/docker /etc/docker /usr/libexec/docker /usr/share/man/man1/docker.1.gz Thu May 23 10:48:32 CST 2019 输入重定向 command [root@server-test-211 kz]# wc 管道 将一个命令的输出作为另一个命令的输入 command1 | command2 # rpm 输出安装包列表，排序存放到rpm.txt文件 [root@server-test-211 kz]# rpm -qa | sort > rpm.txt [root@server-test-211 kz]# ll total 160 -rw-r--r--. 1 root root 0 May 15 16:13 admin.html -rw-r--r--. 1 root root 48 May 16 11:47 index.html -rw-r--r--. 1 root root 104658 May 20 09:54 installed_software.txt -rw-r--r--. 1 root root 43492 May 24 13:56 rpm.txt drwxr-xr-x. 2 root root 56 May 16 14:00 test -rw-r--r--. 1 root root 2212 May 15 17:37 test.html -rwxr--r--. 1 skz root 140 May 23 10:59 test.sh drwxr-xr-x. 2 root root 23 May 17 09:30 user # 查看前四行内容 [root@server-test-211 kz]# head -4 rpm.txt abattis-cantarell-fonts-0.0.16-3.el7.noarch abrt-2.1.11-45.el7.centos.x86_64 abrt-addon-ccpp-2.1.11-45.el7.centos.x86_64 abrt-addon-kerneloops-2.1.11-45.el7.centos.x86_64 # 排序输出前6条包列表9记录 [root@server-test-211 kz]# rpm -qa | sort | head -6 abattis-cantarell-fonts-0.0.16-3.el7.noarch abrt-2.1.11-45.el7.centos.x86_64 abrt-addon-ccpp-2.1.11-45.el7.centos.x86_64 abrt-addon-kerneloops-2.1.11-45.el7.centos.x86_64 abrt-addon-pstoreoops-2.1.11-45.el7.centos.x86_64 abrt-addon-python-2.1.11-45.el7.centos.x86_64 Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-24 14:04:40 "},"shell编程.html":{"url":"shell编程.html","title":"shell编程","keywords":"","body":"shell编程 Copyright © eamiear all right reserved，powered by Gitbook该文件修订时间： 2019-05-16 15:12:13 "}}